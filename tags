!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Available	Jobs_Scheduling.c	/^int Available[3] = {10, 10, 10}; $/;"	v
FINISH	Jobs_Scheduling.c	13;"	d	file:
JCBList	Jobs_Scheduling.c	/^} JCBNode, *JCBList, *JCBPointer; $/;"	t	typeref:struct:_jcb	file:
JCBNode	Jobs_Scheduling.c	/^} JCBNode, *JCBList, *JCBPointer; $/;"	t	typeref:struct:_jcb	file:
JCBPointer	Jobs_Scheduling.c	/^} JCBNode, *JCBList, *JCBPointer; $/;"	t	typeref:struct:_jcb	file:
MAXJOBSIZE	Jobs_Scheduling.c	18;"	d	file:
RJList	Jobs_Scheduling.c	/^} RJNode, *RJList, *RJPointer; $/;"	t	typeref:struct:_RunJob	file:
RJNode	Jobs_Scheduling.c	/^} RJNode, *RJList, *RJPointer; $/;"	t	typeref:struct:_RunJob	file:
RJPointer	Jobs_Scheduling.c	/^} RJNode, *RJList, *RJPointer; $/;"	t	typeref:struct:_RunJob	file:
RUN	Jobs_Scheduling.c	11;"	d	file:
Total	Jobs_Scheduling.c	/^int Total[3] = {10, 10, 10};  $/;"	v
WAIT	Jobs_Scheduling.c	12;"	d	file:
_RunJob	Jobs_Scheduling.c	/^typedef struct _RunJob {$/;"	s	file:
_jcb	Jobs_Scheduling.c	/^typedef struct _jcb {$/;"	s	file:
display	Jobs_Scheduling.c	/^display() {$/;"	f
entertime	Jobs_Scheduling.c	/^  int entertime; $/;"	m	struct:_jcb	file:
getRunningJobSize	Jobs_Scheduling.c	/^getRunningJobSize() {$/;"	f
globalTime	Jobs_Scheduling.c	/^int globalTime; $/;"	v
initGlobalTime	Jobs_Scheduling.c	/^initGlobalTime() {$/;"	f
input	Jobs_Scheduling.c	/^input(int jcbSize) {$/;"	f
insertIntoQueue	Jobs_Scheduling.c	/^insertIntoQueue() {$/;"	f
isAllFinished	Jobs_Scheduling.c	/^isAllFinished() {$/;"	f
isRunnable	Jobs_Scheduling.c	/^isRunnable(JCBPointer pointer) {$/;"	f
jcbList	Jobs_Scheduling.c	/^JCBList jcbList; $/;"	v
jid	Jobs_Scheduling.c	/^  int jid; $/;"	m	struct:_jcb	file:
jname	Jobs_Scheduling.c	/^  char *jname; $/;"	m	struct:_jcb	file:
job	Jobs_Scheduling.c	/^  JCBPointer job; $/;"	m	struct:_RunJob	file:
main	Jobs_Scheduling.c	/^main(int argc, $/;"	f
needtime	Jobs_Scheduling.c	/^  int needtime; $/;"	m	struct:_jcb	file:
next	Jobs_Scheduling.c	/^  struct _RunJob *next; $/;"	m	struct:_RunJob	typeref:struct:_RunJob::_RunJob	file:
next	Jobs_Scheduling.c	/^  struct _jcb *next; $/;"	m	struct:_jcb	typeref:struct:_jcb::_jcb	file:
pickFirstJob	Jobs_Scheduling.c	/^pickFirstJob() {$/;"	f
pickRunning	Jobs_Scheduling.c	/^pickRunning() {$/;"	f
printHorizontalBar	Jobs_Scheduling.c	/^printHorizontalBar() {$/;"	f
removeFromQueue	Jobs_Scheduling.c	/^removeFromQueue() {$/;"	f
resources	Jobs_Scheduling.c	/^  int resources[3]; $/;"	m	struct:_jcb	file:
runFCFS_multi	Jobs_Scheduling.c	/^runFCFS_multi() {$/;"	f
runFCFS_single	Jobs_Scheduling.c	/^runFCFS_single() {$/;"	f
runList	Jobs_Scheduling.c	/^RJList  runList; $/;"	v
sortFCFS	Jobs_Scheduling.c	/^sortFCFS() {$/;"	f
starttime	Jobs_Scheduling.c	/^  int starttime; $/;"	m	struct:_jcb	file:
status	Jobs_Scheduling.c	/^  int status; $/;"	m	struct:_jcb	file:
updateJobs	Jobs_Scheduling.c	/^updateJobs() {$/;"	f
waittime	Jobs_Scheduling.c	/^  int waittime; $/;"	m	struct:_jcb	file:
